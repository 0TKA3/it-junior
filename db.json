{
  "posts": [
    {
      "id": 1,
      "title": "Как быстро изучить JavaScript?",
      "tags": [
        "JavaScript",
        "ES6"
      ],
      "image": "https://usefulangle.com/img/thumb/javascript.png",
      "content": "**От автора:** люди сталкиваются с одними и теми же проблемами, когда хотят изучить JavaScript или любой другой язык программирования. При этом хотят изучить быстро, по возможности._\n\nВот некоторые из этих проблем:\n\nНекоторые концепции сбивают с толку, особенно если вы ранее писали на другом языке\n\nСложно найти свободное время, а иногда и мотивацию\n\nКак только вы что-то поймете, очень просто все забыть\n\nКоличество инструментов для работы огромно, и они постоянно меняются. Очень сложно понять, с чего начать\n\nК счастью, все эти сложности можно определить и побороть. В этой статье я покажу вам 6 способов, как изучить JS быстрее и стать продуктивнее.\n\n### 1\\. Не думайте наперед – это остановит ваш прогресс в настоящем\n\nМножество людей, кто хочет изучить JS побыстрее, задаются вопросом, какой фреймворк учить. А их много. Если вы не знаете основы JS, то сам вопрос поставлен неправильно. Вы потратите время на изучение разных фреймворков, но не получите прогресса.\n\nОдин из способов не попадать в такую ловушку – составить себе план изучения. Например, для фронтенд разработчика план будет следующий:\n\n![Как быстро изучить JavaScript: 6 простых способов](//webformyself.com/wp-content/uploads/2022/29/10.png)\n\nРазбив план на более детальные шаги, вы научитесь создавать функциональные веб-страницы из HTML и CSS. Когда вы видите пошаговый план, намного проще понять, на чем следует сосредоточиться, а на что не стоит тратить время.\n\n### 2\\. Если будете излишне уверены, будете забывать изученное\n\nОдна из самых сложных ловушек при изучении JS – это быстрое понимание темы по верхам. Попробую объяснить.\n\nКогда вы что-то читаете, и вам все понятно, возникает желание перепрыгнуть на следующую тему. Возможно, вы поймете и следующую тему, но в какой-то момент вы поймете, что забыли что-то из предыдущих глав, когда решили проскочить какую-то тему. И вам придется возвращаться обратно. Вы быстренько освежили память и снова вернулись к текущей теме. Но теперь вы забыли что-то другое. Так вы будете прыгать назад и вперед то момента, пока не осознаете, что совсем запутались. У вас пропадет все желание, вы сделаете перерыв, а когда вернетесь, вы вообще забудете все.\n\nК счастью, это легко лечится в 2 шага:\n\nОграничьте изучаемый материал за 1 раз\n\nПрактикуйтесь – реально пишите код\n\nПри изучении новых концепций играйтесь с ними в коде, привыкайте к ним, совмещайте с другими вещами. Крайне важно писать код в любых примерах – так вы впитываете знания. Ограничьте изучаемый материал. Это поможет удержать изученное в голове. Чем меньше изучили, тем легче запомнить.\n\nНа словах кажется, что такой процесс будет дольше, чем просто пробежаться по темам, но на самом деле так вы потратите времени меньше. Вам просто не нужно будет возвращаться к предыдущим темам. Мой горький опыт несколько раз учил меня этому.\n\n### 3\\. Подходите к практике с правильным настроем\n\nЗачастую люди представляют практику как скучное повторение. Они пропускают ее или сокращают. Если вы попробуете сократить практику с JS, вы потратите больше времени на изучение. Так как же сделать практику увлекательной, чтобы вам не хотелось ее пропустить?\n\nПопробуйте представить. Что вы будете чувствовать, если вы изучили новую JS концепцию, а вам запрещают ее проверить на практике? Лично я буду раздражен. Ведь я потратил время на ее изучение. Это как дать ребенку новую игрушку и запретить с ней играть.\n\nКогда изучаете что-то новое в JS, представляйте, что это новая игрушка, новая машина, новые ботинки и т.д. Что угодно, что вам хотелось бы попробовать. Не практикуйте новую фичу, как будто вы на работе. Попробуйте применить ее на практике играючи. Сделайте что-нибудь необычное с новыми навыками, удивите себя. Покажите друзьям.\n\nЕсли смотреть на процесс изучения играючи, вы будете учиться быстрее, помнить дольше, и вам будет в целом веселее.\n\n### 4\\. Найдите время для кодинга вместо Facebook\\*\n\nОдна из наиболее распространенных проблем – у людей нет времени на код. Часто люди сидят часами на сайтах типа Facebook\\*, YouTube, Wikipedia или Reddit. Относится это к вам или нет, отсюда можно почерпнуть урок.\n\nУ меня бывало так, что я хотел зайти в Facebook\\* на минутку, а проводил там несколько часов. Как так получалось? Такое случается, когда вы действительно хотите зайти всего на минутку. Начать – самое сложное. Поэтому мне гораздо проще начать что-то делать, если я знаю, что делать нужно немного. Если бы меня спросили, готов ли я часами сидеть на Facebook\\*, я ответил бы нет. У меня нет на это времени. Но мне нравится мысль проверить что-то одно. И после этого я втягиваюсь.\n\nЭтот же психологический трюк можно использовать для изучения кода. Не пытайтесь искать несколько часов на изучение чего-то. Вы так и не найдете на это время. Просто скажите себе, что попробуете кое-какой код на 3 минуты. Больше у вас проблем со временем не будет.\n\n### 5\\. Думайте медленнее, учитесь быстрее\n\nКажется, что совет противоречит здравому смыслу. Я попробую объяснить через историю.\n\nКак-то раз, мой друг не мог понять одну фичу в JS. Я попросил его рассказать, что он уже изучил и какая часть вызывает у него вопросы. Когда он проходился по коду, я заметил, что он спешит.\n\n«Постой», сказал я. «Давай медленно пройдемся по каждому шагу.»\n\nМой друг снова попытался объяснить мне общий смысл кода.\n\nЯ нова его остановил. «Ты снова спешишь. Давай попробуем еще раз, но в этот раз я хочу буквально пройтись по каждой строчке. Я хочу, чтобы ты объяснил мне каждую строчку».\n\nСо второй попытки друг гораздо лучше объяснил мне код. Ключевым моментом было именно пройтись по каждой строке, а не пытаться понять код в целом. В таких случаях медленное мышление позволяет учиться быстрее.\n\n### 6\\. Пишите сложный код простыми словами\n\nЕсли вы видите, что код будет сложным и незнакомым, напишите сначала этот код простыми словами. Так вы поймете, что код должен делать еще перед тем, как писать настоящий код. У этого подхода есть 2 плюса:\n\nТакой код легче и быстрее писать. Ведь вы не будете постоянно останавливаться и думать, как код должен работать\n\nВы отловите баги еще до написания кода. Ведь вы гораздо лучше представляете, что код должен делать\n\n### Изучайте языки программирования быстрее\n\nМы узнали, как изучать JS быстрее. Многие из этих способов применимы и к другим навыкам. Что мы узнали:\n\nНе думайте наперед, просто начните\n\nСделайте практику веселее, представьте, что новые фичи это игрушки\n\nНайдите время чуть-чуть покодить, как если бы вы просто зашли на Facebook\\*, YouTube или Wikipedia\n\nНе спешите, идите маленькими шагами. Так вы будете быстрее учиться\n\nА как вы подходите к изучению чего-то нового? У вас есть свои советы или трюки, про которые я не рассказал? А, может, вы думаете, что это все ерунда, и единственный способ – сидеть по 12 часов в день?\n\n",
      "information": {
        "views": 26,
        "likes": 0,
        "comments": 0
      },
      "date": "05-11-2023"
    },
    {
      "id": 2,
      "title": "С чего начать изучение React?",
      "tags": [
        "React",
        "Redux"
      ],
      "image": "https://www.qcdesigns.online/wp-content/uploads/2023/02/pngwing.com-5-768x768.png",
      "content": "",
      "information": {
        "views": 27,
        "likes": 0,
        "comments": 0
      }
    }
  ],
  "users": [],
  "popular-tags": [
    {
      "tagName": "javascript",
      "tagImage": "http://localhost:5173/src//assets/icons/javascript.svg"
    },
    {
      "tagName": "react",
      "tagImage": "http://localhost:5173/src//assets/icons/react.svg"
    },
    {
      "tagName": "vue",
      "tagImage": "http://localhost:5173/src//assets/icons/vue.svg"
    },
    {
      "tagName": "python",
      "tagImage": "http://localhost:5173/src//assets/icons/python.svg"
    },
    {
      "tagName": "angular",
      "tagImage": "http://localhost:5173/src//assets/icons/angular.svg"
    }
  ]
}